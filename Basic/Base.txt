1. Python和Java、PHP、C、C#、C++等其他语言的对比
   Python: 1>. 解释型语言，
           2>.动态语言，执行过程中允许动态的导入一些模块，类，函数，只要在调用之前声明就可以了
           3>.Python中一切皆对象, 比如函数就是第一等对象，可以独立存在

   Java:   1>. 解释型语言，
           2>. 代码执行的过程是先把类全部加载到JVM中，再执行，执行过程中不能动态的创建类
           3>. Java中一切皆对象, 比如函数不能独立存在，必须定义在类中

   C：     1>. 编译型语言
           2>. 面向过程
		   3>. Python中一种常用的解释器Cython就是C语言写的

   C++：   1>. 编译型语言
           2>. 面向对象
           3>. Java虚拟机就是用C++写的

2. 解释型语言，编译型语言
   编译型语言: 运行时用编译器对代码进行一次性翻译，将其翻译成机器语言执行，快
   解释型语言: 运行时先将其转化成字节码，然后在虚拟机中用解释器，一边执行一边将其翻译成机器语言, 开发速度快

3. Python常用的解释器
   CPython(最常用的)，PyPy(JIT,动态编译非解释，速度快)，Jython(Java平台)

4. 位和字节的关系: 8b = 1B

5. b,B,KB,MB,GB的关系: 8b = 1B, 其余换算关系为1024

6. PEP8 规范:
    1>. 不用;
    2>. 少用()
    3>. 4个空格缩进代码
    4>. 顶级定义空两行, 方法定义空一行
    5>. 类定义要有描述文档字符串, 共有属性要有Attributes介绍
    6>. 类不继承其他类，则显示的继承Object
    7>. 避免用 +， += 连接字符串，会产生额外的临时对象
    8>. 文件对象尽量用上下文with管理
    9>. 每个导入独占一行
    10>. 变量命名方式:  number_of_students = 100
    11>. 常量命名方式:  NUMBER_OF_STUDENTS = 100
    12>. 内部方法命名方式: def _func(self):pass

7. 进制转换:
            二进制转换成十进制：v = “0b1111011”           # int('0b11110111',2)
            十进制转换成二进制：v = 18                    # bin(18)
            八进制转换成十进制：v = “011”                 # int('011',8)
            十进制转换成八进制：v = 30                    # oct(30)
            十六进制转换成十进制：v = “0x12”              # int('0x12',16)
            十进制转换成十六进制：v = 87                 #  hex(87)

8. 直接赋值, 浅拷贝, 深拷贝:
   直接赋值: 按对象引用
          a = [1,[2,3]], b = a
   浅拷贝: 拷贝父对象, 不拷贝内部的子对象, 内部子对象按对象引用
          b = a.copy()
   深拷贝: 完全拷贝父对象和内部所有对象
          from copy import deepcopy
          b = deepcopy(a)