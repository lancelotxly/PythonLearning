1. 简述 OSI 七层协议
        /*OSI七层*/        /*TCP/IP五层*/         /*TCP/IP四层*/    协议
           应用层
           表示层   ------      应用层      ----       应用层          HTTP, FTP, DNS
           会话层

           /***************  Socket **********************/

           传输层   ------      传输层      ----       传输层         TCP/UDP
           网络层   ------      网路层      ----       网路层           IP

           数据链路层 ----       数据链路层  ----       网络接口层       ARP
           物理层   ------      物理层

2.  什么是C/S和B/S架构
         1). C/S: Client and Server
               #1. 两层架构
               #2. 客户端需要实现绝大多少的业务逻辑和界面展示
               #3. 服务器端实现与数据库交互

               优点:
                    #1. 交互只有一层, 响应速度快
                    #2. 客户端操作丰富
                    #3. 安全性好
               缺点:
                    #1. 用户群窄, 需要安装客户端
                    #2. 维护成本高, 发生一次升级, 所有客户端要更新

        2). B/S: Browser and Server
           #1. Browser, Server和DataBase构成三层架构
           #2. 事务主要在后端处理, 前端负责呈现

           优点:
               #1. 客户端无需安装, 浏览器就行了
               #2. 用户群广
               #3. 升级服务器就行了
           缺点:
               #1. 跨浏览器的兼容问题
               #2. 响应速度和安全问题

3. 简述 三次握手、四次挥手的流程
    三次握手: A向B发请连接请求, B收到后向A发出确认, A收到B的确认后向B发出确认
    四次挥手: A数据发送完了向B发出断开连接请求, B收到后向A发出确认; B数据也发生完了向A发出断开连接请求, A收到后向B发出确认

4. 什么是arp协议？
   Address Resolution Protocol地址解析协议, 将目的IP地址转为其MAC地址

5. TCP和UDP的区别？
   TCP: 面向连接, TCP传输的数据不会丢, 一次没有收完的包, 下一次会继续接收, 但会出现粘包
   UDP: 面向用户数据报, 会丢包, 但不会粘包

6. 为何基于tcp协议的通信比基于udp协议的通信更可靠
   TCP面向连接

7. 什么是socket？简述基于tcp协议的套接字通信流程。
   位于应用以下, 传输层以上, 对上层封装了下层具体的TCP/UDP实现
   创建socket对象 --> 绑定IP_PORT --> 开始监听 --> 有用户接入时创建连接 --> 开始通信 --> 结束后断开连接

8. 什么是粘包？ socket 中造成粘包的原因是什么？ 哪些情况会发生粘包现象？
   TCP传输时, 接收方不知道发送发送的数据包界限, 导致少收或多收
   粘包情况: 1) 发送间隔短, 数据量小， TCP会将其整合发送
           2) 一次没接收完

9. IO多路复用的作用？
   实现并发

10. 什么是防火墙以及作用？
   防火墙是指设置在不同网络（如可信任的企业内部网和不可信的公共网）或网络安全域之间的一系列部件的组合。
   它可通过监测、限制、更改跨越防火墙的数据流，尽可能地对外部屏蔽网络内部的信息、结构和运行状况， 以此来实现网络的安全保护